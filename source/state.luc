module state (
    input clk,  // clock
    input rst,  // reset
    input dipsw,
    input alufn[6], //only using 0:5 //get from  io_dip[2]
    input diperr, //diperr is the switch that will force output to be all high
    input a[8],
    input b[8],
    output out[8], //result of a <some operation> b
    output z[3],
    output v[3],
    output n[3] ,
    output clk_a[8],
    output clk_b[8],
    output alufnout[6]
  ) {

  .clk(clk) {
    .rst(rst) {
    //states in our FSM (Switch between manual mode and auto mode)
      fsm state = {MANUAL,AUTO,PAUSE};
      //we will use the 
      tester mytester;
    }
    
  }
  alu myalu;
  sig displaya[8];
  sig displayb[8];
  sig alufnvar[6];
  
  always {
    out = 0;
    z = 0;
    v = 0;
    n = 0;
    myalu.alufn = alufn;
    myalu.a = 0;
    myalu.b = 0;
    clk_a = 0;
    clk_b = 0;
    displaya =0;
    displayb = 0;
    alufnout = alufn;
    alufnvar = 0;
    mytester.forcederr=diperr;
    case (state.q){
      state.MANUAL:
        myalu.a = a;
        myalu.b = b;
        myalu.alufn = alufn;
        out = myalu.alu;
        z = myalu.z;
        v = myalu.v;
        n = myalu.n;
        clk_a = a;
        clk_b = b;
        alufnout = alufn;
        if (diperr & myalu.alu!=8b11111111 ){
            out = 8b11111111;
            z = 2;
            v = 3;
            n = 3; //To display Err on 7 seg led
      }
        if(alufn!=Inst.SHR & alufn!=Inst.CMPLE & alufn !=Inst.CMPLT & alufn !=Inst.SUB& alufn !=Inst.XOR& alufn !=Inst.AND& alufn !=Inst.SRA& alufn !=Inst.CMPEQ& alufn !=Inst.SHL& alufn !=Inst.MUL& alufn !=Inst.OR& alufn !=Inst.LDR& alufn !=Inst.ADD){
           out = 8b0;
           z = 2;
            v = 3;
            n = 3; //To display Err on 7 seg led if alufn input invalid
          }
        if(dipsw){
          state.d = state.AUTO;
        }
       
      state.AUTO:
        mytester.forcederr = diperr;
        out = mytester.out;
        z =mytester.z;
        v = mytester.v;
        n = mytester.n;
        clk_a = mytester.a;
        clk_b = mytester.b;   
        displaya = mytester.a;
        displayb = mytester.b;   
        alufnout = mytester.alufn;  
        //change to compare in tester module only 
        if (diperr & mytester.err==1){
         // alufnvar = mytester.alufn;
            out = 8b11111111;
            z = 2;
            v = 3;
            n = 3; //To display Err on 7 seg led
           // state.d = state.PAUSE;
      }
        if (!dipsw){
          state.d = state.MANUAL;
        }
        
    }
         

  }
}