/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module state_2 (
    input clk,
    input rst,
    input dipsw,
    input [5:0] alufn,
    input diperr,
    input [7:0] a,
    input [7:0] b,
    output reg [7:0] out,
    output reg [2:0] z,
    output reg [2:0] v,
    output reg [2:0] n,
    output reg [7:0] clk_a,
    output reg [7:0] clk_b
  );
  
  
  
  localparam MANUAL_state = 1'd0;
  localparam AUTO_state = 1'd1;
  
  reg M_state_d, M_state_q = MANUAL_state;
  wire [16-1:0] M_autoab_value;
  counter_4 autoab (
    .clk(clk),
    .rst(rst),
    .value(M_autoab_value)
  );
  
  wire [1-1:0] M_myalu_z;
  wire [1-1:0] M_myalu_v;
  wire [1-1:0] M_myalu_n;
  wire [8-1:0] M_myalu_alu;
  reg [8-1:0] M_myalu_a;
  reg [8-1:0] M_myalu_b;
  reg [6-1:0] M_myalu_alufn;
  alu_5 myalu (
    .a(M_myalu_a),
    .b(M_myalu_b),
    .alufn(M_myalu_alufn),
    .z(M_myalu_z),
    .v(M_myalu_v),
    .n(M_myalu_n),
    .alu(M_myalu_alu)
  );
  
  always @* begin
    M_state_d = M_state_q;
    
    out = 1'h0;
    z = 1'h0;
    v = 1'h0;
    n = 1'h0;
    M_myalu_alufn = alufn;
    M_myalu_a = 1'h0;
    M_myalu_b = 1'h0;
    clk_a = 1'h0;
    clk_b = 1'h0;
    
    case (M_state_q)
      MANUAL_state: begin
        M_myalu_a = a;
        M_myalu_b = b;
        M_myalu_alufn = alufn;
        out = M_myalu_alu;
        z = M_myalu_z;
        v = M_myalu_v;
        n = M_myalu_n;
        clk_a = a;
        clk_b = b;
        if (dipsw) begin
          M_state_d = AUTO_state;
        end
      end
      AUTO_state: begin
        M_myalu_alufn = alufn;
        M_myalu_b = M_autoab_value[8+7-:8];
        M_myalu_a = M_autoab_value[0+7-:8];
        clk_b = M_autoab_value[8+7-:8];
        clk_a = M_autoab_value[0+7-:8];
        out = M_myalu_alu;
        z = M_myalu_z;
        v = M_myalu_v;
        n = M_myalu_n;
        if (!dipsw) begin
          M_state_d = MANUAL_state;
        end
      end
    endcase
    if (diperr & M_myalu_alu != 8'hff) begin
      out = 8'hff;
      z = 2'h2;
      v = 2'h3;
      n = 2'h3;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
